---
name: CI

on:  # NOLINT
  pull_request:
  push:
  schedule:
    - cron: '0 0 */2 * *'  # Every 2 days at midnight

jobs:
  test_docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_path:
          - ros_ws/src
        # Define the Docker image(s) associated with each ROS distribution.
        # The include syntax allows additional variables to be defined, like
        # docker_image in this case. See documentation:
        # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-configurations-in-a-matrix-build

        # Platforms are defined in REP 3, and REP 2000:
        # https://ros.org/reps/rep-0003.html
        # https://ros.org/reps/rep-2000.html
        include:
          # Foxy Fitzroy (May 2020 - May 2023)
          - docker_image: ros:foxy
            ros_distribution: foxy
            ros_version: 2

    container:
      image: ${{ matrix.docker_image }}

      - name: Install Tools
        run: |
          sudo apt update
          sudo apt install -y build-essential clang cmake git wget libasio-dev libtinyxml2-dev lcov psmisc
          rosdep update
          sudo apt install -y python3-colcon-coveragepy-result
          sudo apt install -y python3-colcon-lcov-result

      - name: Install Gazebo
        run: |
          sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
          wget https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
          sudo apt update
          sudo apt install -y gazebo9
          sudo apt install -y libgazebo9-dev
          sudo apt install -y ros-${{ matrix.ros_distribution }}-gazebo-ros-pkgs
          mkdir -p ${{ matrix.build_path }}

      - name: Create ROS Workspace
        uses: actions/checkout@v2
        with:
          path: ${{ matrix.build_path }}

      - name: Install Dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive rosdep update
          DEBIAN_FRONTEND=noninteractive rosdep install --from-paths ${{ matrix.build_path }} --ignore-src --rosdistro ${{ matrix.ros_distribution }} -y

      - name: Build Packages
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          colcon build --packages-up-to plankton --merge-install

      - name: Run Unit Tests
        id: action_ros_ci_step
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          colcon test --merge-install --packages-up-to plankton --event-handlers console_cohesion+

      - name: Unit Test Results
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          colcon test-result --all --verbose

      - name: Upload Logs
        uses: actions/upload-artifact@v1
        with:
          name: colcon-logs-linux
          path: log/
        if: always()
