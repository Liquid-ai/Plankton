<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/jp/ros2_ws/src/Plankton/uuv_gazebo_plugins/uuv_gazebo_ros_plugins/test/models/thrusters/model.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Copyright (c) 2020 The Plankton Authors.
     All rights reserved.

     This source code is derived from UUV Simulator
     (https://github.com/uuvsimulator/uuv_simulator)
     Copyright (c) 2016-2019 The UUV Simulator Authors
     licensed under the Apache license, Version 2.0
     cf. 3rd-party-licenses.txt file in the root directory of this source tree.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<robot name="rexrov">
  <!-- ROTOR DYNAMICS MACROS -->
  <!-- First order dynamics -->
  <!--
    MACROS FOR CONVERSION FUNCTIONS BETWEEN ROTOR'S ANG. VELOCITY AND
    THRUSTER FORCE
  -->
  <!-- THRUSTER MODULE MACROS  -->
  <!--
    Thruster model with first order dynamic model for the rotor dynamics
    and a proportional non-linear steady-state conversion from the rotor's
    angular velocity to output thrust force
  -->
  <link name="vehicle/base_link">
    <inertial>
      <mass value="10"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libuuv_underwater_object_ros_plugin.so" name="uuv_plugin">
      <fluid_density>1028.0</fluid_density>
      <flow_velocity_topic>hydrodynamics/current_velocity</flow_velocity_topic>
      <debug>0</debug>
      <link name="vehicle/base_link">
        <neutrally_buoyant>0</neutrally_buoyant>
        <volume>0.009727626</volume>
        <box>
          <width>1.0</width>
          <length>1.0</length>
          <height>1.0</height>
        </box>
        <center_of_buoyancy>0 0 0</center_of_buoyancy>
        <hydrodynamic_model>
          <type>sphere</type>
          <radius>0.1</radius>
        </hydrodynamic_model>
      </link>
    </plugin>
  </gazebo>
  <joint name="vehicle/thruster_0_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.5 0 0"/>
    <axis xyz="1 0 0"/>
    <parent link="vehicle/base_link"/>
    <child link="vehicle/thruster_0"/>
  </joint>
  <link name="vehicle/thruster_0">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/jp/ros2_ws/install/uuv_descriptions/share/uuv_descriptions/mesh/prop.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="vehicle_0_thruster_model">
      <linkName>vehicle/thruster_0</linkName>
      <jointName>vehicle/thruster_0_joint</jointName>
      <thrusterID>0</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.001</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="vehicle/thruster_0">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="vehicle/thruster_1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.5 0 0"/>
    <axis xyz="1 0 0"/>
    <parent link="vehicle/base_link"/>
    <child link="vehicle/thruster_1"/>
  </joint>
  <link name="vehicle/thruster_1">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/jp/ros2_ws/install/uuv_descriptions/share/uuv_descriptions/mesh/prop.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="vehicle_1_thruster_model">
      <linkName>vehicle/thruster_1</linkName>
      <jointName>vehicle/thruster_1_joint</jointName>
      <thrusterID>1</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Bessa</type>
        <rotorConstantL>0.001</rotorConstantL>
        <rotorConstantR>0.001</rotorConstantR>
        <deltaL>-0.01</deltaL>
        <deltaR>0.01</deltaR>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="vehicle/thruster_1">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="vehicle/thruster_2_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.5 0"/>
    <axis xyz="1 0 0"/>
    <parent link="vehicle/base_link"/>
    <child link="vehicle/thruster_2"/>
  </joint>
  <link name="vehicle/thruster_2">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/jp/ros2_ws/install/uuv_descriptions/share/uuv_descriptions/mesh/prop.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="vehicle_2_thruster_model">
      <linkName>vehicle/thruster_2</linkName>
      <jointName>vehicle/thruster_2_joint</jointName>
      <thrusterID>2</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>LinearInterp</type>
        <inputValues>-0.1 0 0.1</inputValues>
        <outputValues>-0.01 0 0.01</outputValues>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="vehicle/thruster_2">
    <selfCollide>false</selfCollide>
  </gazebo>
</robot>
